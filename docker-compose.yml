version: '3.8'

services:
  

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    restart: always
    networks:
      - shared-net

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - shared-net
    restart: always



  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_CLUSTER_NAME=MyCassandraCluster
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=Rack1
    volumes:
      - cassandra-data:/var/lib/cassandra
      - ./cdc:/var/lib/cassandra/cdc_raw
    networks:
      - shared-net
    restart: always

  db_agent:
    image: postgres:16
    user: root
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=agent
      - POSTGRES_PASSWORD=agent@2023
      - POSTGRES_DB=store
    restart: always
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    networks:
      - shared-net


networks:
  shared-net:
    driver: bridge


volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  cassandra-data:
    driver: local
  postgresql-data:
    driver: local  # persists PostgreSQL data
